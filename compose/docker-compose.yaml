version: '3.7'

services:
  message-broker:
    image: rabbitmq:3.8-management
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin
    ports:
      - "5672:5672"
      - "15672:15672"
      - "15692:15692"
    networks:
      - main_network

  # Post microservice
  post:
    build:
      dockerfile: docker/dockerfile.develop
      context: ../post
    volumes:
      - ../post:/app
    ports:
      - "9232:9232"
      - "3002:3002"
    env_file:
      - ../post/.env
    networks:
      - main_network
      - post_network
    depends_on: 
      - message-broker
      - post-data-persistence

  post-data-persistence:
    image: bitnami/mongodb:4.2
    environment:
      - MONGODB_ADVERTISED_HOSTNAME=post-data-persistence
      - MONGODB_REPLICA_SET_MODE=primary
      - MONGODB_ROOT_PASSWORD=password
      - MONGODB_REPLICA_SET_KEY=replicasetkey123
    volumes:
      - post-mongo-volume:/bitnami
    ports:
      - "27018:27017"
    networks:
      - post_network
  
  # Blockchain-interactor microservice
  blockchain-interactor:
    build:
      dockerfile: docker/dockerfile.develop
      context: ../blockchain-interactor
    volumes:
      - ../blockchain-interactor:/app
    ports:
      - "9231:9231"
      - "3001:3001"
    env_file:
      - ../blockchain-interactor/.env
    networks:
      - main_network
      - blockchain-interactor_network
    depends_on: 
      - message-broker
      - blockchain-interactor-data-persistence

  blockchain-interactor-data-persistence:
    image: bitnami/mongodb:4.2
    environment:
      - MONGODB_ADVERTISED_HOSTNAME=blockchain-interactor-data-persistence
      - MONGODB_REPLICA_SET_MODE=primary
      - MONGODB_ROOT_PASSWORD=password
      - MONGODB_REPLICA_SET_KEY=replicasetkey123
      - MONGODB_USERNAME=user
      - MONGODB_PASSWORD=password
      - MONGODB_DATABASE=postchain
    volumes:
      - blockchain-interactor-mongo-volume:/bitnami
    ports:
      - "27017:27017"
    networks:
      - blockchain-interactor_network
 
  # # checker microservice
  # checker:
  #   build:
  #     dockerfile: docker/dockerfile.develop
  #     context: ../checker
  #   volumes:
  #     - ../checker:/app
  #   ports:
  #     - "9234:9234"
  #     - "3004:3004"
  #   env_file:
  #     - ../checker/.env 
  #   networks:
  #     - main_network
  #     - checker_network
  #   depends_on: 
  #     - message-broker
  #     - checker-data-persistence
 

  # checker-data-persistence:
  #   image: bitnami/mongodb:4.2
  #   environment:
  #     - MONGODB_ADVERTISED_HOSTNAME=checker-data-persistence
  #     - MONGODB_REPLICA_SET_MODE=primary
  #     - MONGODB_ROOT_PASSWORD=password
  #     - MONGODB_REPLICA_SET_KEY=replicasetkey123
  #     - MONGODB_USERNAME=user
  #     - MONGODB_PASSWORD=password
  #     - MONGODB_DATABASE=postchain
  #   volumes:
  #     - checker-mongo-volume:/bitnami
  #   ports:
  #     - "27019:27017"
  #   networks:
  #     - checker_network


  # Saga orchestrator microservice
  orchestrator:
    build:
      dockerfile: docker/dockerfile.develop
      context: ../orchestrator
    volumes:
      - ../orchestrator:/app
    ports:
      - "9235:9235"
      - "3005:3005"
    env_file:
      - ../orchestrator/.env 
    networks:
      - main_network
    depends_on:
      - message-broker
     
  
  # API Gateway
  api-gateway:
    build:
      dockerfile: dockerfile
      context: ../api-gateway
    environment:
      - KONG_DATABASE=off
      - KONG_DECLARATIVE_CONFIG=/usr/local/kong/declarative/kong.yml
      - KONG_PROXY_ACCESS_LOG=/dev/stdout
      - KONG_ADMIN_ACCESS_LOG=/dev/stdout
      - KONG_PROXY_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_LISTEN=0.0.0.0:8001
      - KONG_PLUGINS=bundled,oidc
    volumes:
      - ../api-gateway/routes:/usr/local/kong/declarative
    ports:
      - "80:8000"
      - "8001:8001"
    networks:
      - main_network


  # Web Interface
  web-interface:
    build:
      dockerfile: docker/dockerfile.develop
      context: ../web-interface
    volumes:
      - ../web-interface/:/app/
    ports:
      - "4201:4200"
    networks:
      - main_network

networks:
  main_network:
    name: main_network
  blockchain-interactor_network:
    name: blockchain-interactor_network
 #not used for now
 # user_network:
  #  name: user_network
 
  post_network:
    name: post_network
 # checker_network:
  #  name: checker_network

volumes:
  blockchain-interactor-mongo-volume:
    driver: local
# not used for now
  user-mongo-volume:
    driver: local

  post-mongo-volume:
    driver: local
 # checker-mongo-volume:
  #  driver: local

